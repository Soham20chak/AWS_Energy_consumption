---codes
CREATE EXTERNAL SCHEMA ENERGY_CONSUMPTION
FROM KINESIS
IAM_ROLE 'arn:aws:iam::896334692798:role/redshift-kinesis-role';


CREATE MATERIALIZED VIEW ENERGY AS
    SELECT approximate_arrival_timestamp,
    partition_key,
    shard_id,
    sequence_number,
    json_parse(FROM_VARBYTE(kinesis_data, 'utf8')) as payload    
    FROM ENERGY_CONSUMPTION.energy_data_stream;


--select * from ENERGY

--CLEANSING
REFRESH MATERIALIZED VIEW ENERGY;
UPDATE energy
SET payload."temperature" = 0
WHERE temperature IS NULL;

--CLEANSING
REFRESH MATERIALIZED VIEW ENERGY;
UPDATE energy
SET payload."energy_consumed" = 0
WHERE payload."energy_consumed" < 0 OR payload."energy_consumed" > 15;

REFRESH MATERIALIZED VIEW ENERGY;
-- Calculate total energy consumption per location
SELECT payload."location", SUM(payload."energy_consumed") AS total_energy_consumption
FROM energy
GROUP BY payload."location" order by payload."location";

REFRESH MATERIALIZED VIEW ENERGY;
--Analyze energy consumed with respect to temperature
select payload."temperature",avg(payload."energy_consumed") from energy group by payload."temperature" order BY
payload."temperature" desc;

--Analyze energy consumed with respect to humidity
select payload."humidity",avg(payload."energy_consumed") from energy group by payload."humidity" order BY
payload."humidity" desc;

-- Visualize energy consumption trends over time
SELECT DATE_TRUNC('second', approximate_arrival_timestamp) AS time, AVG(payload."energy_consumed") AS avg_energy_consumption
FROM energy
GROUP BY DATE_TRUNC('second', approximate_arrival_timestamp)
ORDER BY time desc;

-- Calculate average energy consumption per location
SELECT payload."location",
       AVG(payload."energy_consumed") AS avg_energy_consumption
FROM energy
GROUP BY payload."location"
ORDER BY avg_energy_consumption DESC;

REFRESH MATERIALIZED VIEW ENERGY;
-- Identify abnormal energy consumption events (e.g., outliers)
SELECT payload."location", approximate_arrival_timestamp, payload."energy_consumed"
FROM energy
WHERE payload."energy_consumed" > 12
ORDER BY payload."energy_consumed" DESC;

REFRESH MATERIALIZED VIEW ENERGY;
-- Query to detect anomalies in energy consumption
SELECT
    count(payload."energy_consumed"),
    CASE
        WHEN payload."energy_consumed" > 13 THEN 'High'
        WHEN payload."energy_consumed" < 5 THEN 'Low'
        ELSE 'Normal'
    END AS consumption_status
FROM
    energy GROUP BY consumption_status;

--Avg energy consumption , temperature , humidity in each location
select payload."location",avg(payload."energy_consumed"),avg(payload."temperature"),avg(payload."humidity") 
 from energy group by payload."location"  






